#coding:utf-8
#确保文件编码与以上相符、不要修改！
#*****************************************************************************
# 如果你是使用 Windows 记事本打开此文件，请换用其它文本编辑工具。
#*****************************************************************************
[misc]
#启动时，是否检查同时运行了可能造成冲突的进程，只检测 Windows 系统
checkprocess = 1
#启动时，是否检查并导入 CA 证书，暂时只支持 Windows 系统证书仓库
checksysca = 1
#解决某些情况下无法写入数据导致客户端无法收到完整数据的问题，遇到此情况请开启
#在 Windows 下使用 gevent.libuv 事件循环时，也会自动启用它
#如果不修补也能正常使用 gevent 时，可以在后一个选项撤销它
geventpatch = 0
revertgeventpatch = 0

[listen]
#监听 ip 和端口
# 127.0.0.1 监听本机 IPv4 环回地址
#   0.0.0.0 监听本机所有 IPv4 地址
#       ::1 监听本机 IPv6 环回地址
#        :: 监听本机所有 IPv6 地址
#      留空 监听本机所有地址
#   某个 IP 只监听这个 IP 地址
ip = 127.0.0.1
#IP 主机名，用于 https 方式访问本代理，访问端口与 http 方式相同
#填入代理服务器主机的任意一个有效 IP 即可
#只能使用这个 IP 和可访问代理服务器主机的任意非 IP 主机名来访问本代理
iphost = 127.0.0.1
#自动代理端口
autoport = 8087
#活动代理端口
actport = 8086
#指定活动代理，默认为 cfw
act = cfw
#使用 GotoX 代理时的身份验证方式
# 0：不进行认证
# 1：Basic，这并不能保证安全，可通过抓包分析得到用户名和密码
# 2：IP，通过 HTTPS 链接登录，登录成功后只验证 IP
auth = 0
#免验证 IP 白名单，127.0.0.1、::ffff:127.0.0.1、::1 是本机地址
authwhitelist = 127.0.0.1
#验证格式：［用户名:密码|用户名2:密码2……］，必须使用冒号，不能使用非 ANSI 字符。
#默认为：［:］，即用户名和密码均留空，只保留冒号。
authuser = s:s

[log]
#启动后是否显示 GotoX 窗口，仅支持 Windows 系统
visible = 1
#是否打印除启动信息之外的日志到标准输出，不影响保存日志
print = 1
# 0：仅错误、警告
# 1：包括一般信息
# 2：包括 IP 筛选信息
# 3：所有信息包括调试信息
level = 1
#是否保存日志
save = 0
#日志文件保存位置
#未指定绝对路径时，保存到 log 目录
#如果指定的路径是目录，自动添加文件名 log.txt
file =
#最大日志文件大小，单位：KB
filesize = 1024
#最大日志存档数量: log.txt.1、log.txt.2、...
rotation = 1

[link]
# ipv4、ipv6、ipv46，默认 ipv46
#为了在设置为 ipv6 时通过 NAT64 网关访问仅提供 IPv4 地址的网址
#可参考 https://developers.google.com/speed/public-dns/docs/dns64 设置 DNS
# CFIEC 的 DNS 也支持 DNS64：http://www.chinaipv6.com.cn/
profile = ipv46
#检测 IPv6 网络时，只检查是否有分配全局 IP 或 teredo IP
#当网络状况不太好时，可以打开此项避免误判
fastv6check = 1
#新建连接时评优算法选出的 ip 数量
window = 3
#每 IP 最大连接数，上限 32，建议不要大于 16
#合适的值对于每个不同的站点和 IP 是不同的，可以优化响应表现
#连接数达到限制会有［LimiterFull］警告，可以参考出现频率来调整值
#针对部分单个网站的 CDN IP（域名不同、IP 通用的都适用，SNI 代理除外），
#可以在 iplist 中建立［cdn_］开头的列表（值可以是 IP 或域名），
#然后在 ActionFilter.ini 中应用 direct 规则，可以减少连接数，加快响应速度
#会影响 SNI 代理的使用，注意合理配置 SNI IP
maxperip = 6
#接收缓冲大小，上限 4M，建议 64-512K，不要大于 1M
recvbuffer = 131072
#对谷歌域名进行 CA 公钥验证
verifygpk = 1
#本地加密 SSLv2、SSLv3、TLS、TLSv1、TLSv1.1、TLSv1.2、TLSv1.3，默认 TLS
#兼容模式 TLS 禁用 SSLv3 及以下版本
#当设置不支持的 TLSv1.3 时自动回落 TLSv1.2
localssl =
#远程加密 TLS、TLSv1、TLSv1.1、TLSv1.2、TLSv1.3，默认 TLS
#兼容模式 TLS 禁用 TLSv1.1 及以下版本
#当设置不支持的 TLSv1.3 时自动回落 TLSv1.2
remotessl =
#强制请求压缩内容，解压缩后无法提供原始内容大小信息，可能会不兼容某些应用
#未安装 brotlipy 时会自动关闭
requestcompress = 0
#普通连接超时设置
timeout = 5
#转发连接超时设置
fwdtimeout = 8
#普通连接 keepalive 有效时间
keeptime = 180
#转发连接 keepalive 有效时间
fwdkeeptime = 120
#直连、转发失败时使用临时规则的持续时间
temptime = 900
#直连、转发失败时不使用临时规则的域名列表
tempwhitelist =

[cfw]
#请填写 worker 的完整域名，只能填写一个
#如 cloudflare 提供的免费域名， worker-name.your-subdomain.workers.dev
#或者用你自己绑定的域名
worker =v2ray2.redball1017.tk
#使用密码，默认为空。可以在服务端目录的 cloudflare_workers/index.js 中设定并部署，如果设定了，此处需保持一致
password =
#自定义 IP 节点
#如果不想使用解析结果，可填写任意可用的 Cloudflare IP，每个 IP 会自动扩展为 256 个
#注意不要重复填写同一网段的 IP，IPv4 掩码 24，IPv6 掩码 120
#如 162.159.208.0|162.159.209.0|162.159.210.0|162.159.211.0，共 4 * 256 个 IP
#可以设置不使用 explodeip 扩展 IP 数量
explodeip = 1
iplist =
#是否解码被混淆的 Email 地址，影响 Content-Type 属于 'text/html' 或 'application/xhtml+xml' 的响应
decodeemail = 0
#连接超时设置
timeout = 10
#是否启用 keepalive
keepalive = 1
# keepalive 有效时间
keeptime = 180
#失败时本地重试次数，默认 2 次
fetchmax = 2

[gae]
#https://你的appid.appspot.com/ 查看服务端版本
appid =
#服务端记录 debug 信息级别（0-2）
debug = 0
#使用密码，默认为空。可以在服务端目录的 gae/gae.go 中设定并部署，如果设定了，此处需保持一致
password =
# GoProxy 服务端路径［/_gh/］，不再兼容其它服务端。
path = /_gh/
#针对 GAE/GWS 每 IP 最大连接数，上限 8，建议不要大于 4
#如果发现超时、丢包频繁，尝试设为 1 或 2
#还会影响 SNI 代理的使用，注意合理配置 SNI IP
maxperip = 2
# GAE 连接超时设置，如果需要经常下载超过 32MB 的文件，建议至少 4 秒
timeout = 10
#针对 GAE/GWS IP 是否启用 keepalive
keepalive = 1
#针对 GAE/GWS 的 keepalive 有效时间
keeptime = 30
#同时最大 GAE 请求数量系数 N，总数为 N * appid 数量，间接限制了 autorange 实际工作线程
#不会限制直连，建议 go 服务端 5 以下，py 服务端 3 以下
maxrequsts = 2
#是否在 GAE 服务器对访问网址的证书进行验证
sslverify = 1
#失败时本地重试次数，默认 2 次
fetchmax =
#响应内容大小超过 32MB 限制时，服务端重新请求内容大小，默认 4MB（4194304）
maxsize =
#固定 GAE 服务使用的 iplist，当值不是空白时（不能直接填 IP），将不会进行 IP 检查筛选
#可填写存在的任意列表名称
iplist =
# GAE 前置使用的列表，默认名称为 google_2p
iplist2p =
#修改使用 google_gae 列表连接时的 ServerNmae
#这与在自动规则中伪造 .appspot.com 的 SNI 等同，但自动规则的优先级更高，且只能伪造一个
#只有全部都是 *.appspot.com 域名才能保证 SNI IP 反代正确工作
#2018-12-20 更新：
#可以使用不包含点的任意字符串，或者是 *.appspot.com（* 不能是 www）
#使用 SNI IP 需修改 ip.use 文件的 google_gae 条目
#且 SNI IP 无法和非 SNI IP 一起工作，也无法进行筛选，需关闭 [picker/gae]
servername =
#是否启用前置代理
enableproxy = 0
#支持 HTTP 和 SOCKS4/5 代理，请确保代理有效，用户和密码正确
#协议://[用户名[:密码]@](主机名|ip):端口
#使用 | 分割多个代理
# SOCKS4 不支持代理 IPv6，可能无法正常工作
proxylist =

[iplist]
google_2p = www.google.com
#用于连接 GAE／forward／direct 的 IP 列表
# google_cn、google_gae、google_gws 为默认列表，不要使用
#可自行添加其它列表，不要使用域名作为名称
google_cn = www.g.cn|www.google.cn|firebase.google.cn|developers.google.cn
#谷歌相关域名列表请「一定」以 google_ 作为前缀
#google_xx =
# GGC 或用于谷歌域名的反向代理
#google_sni =
#通用的反向代理列表请「一定」以 sni_ 作为前缀
#sni_xx =
#特定网站的 CDN 列表请「一定」以 cdn_ 作为前缀
#cdn_xx =
cdn_cloudflare_dns = 162.159.132.53|162.159.36.1|162.159.46.1|104.16.249.249|104.16.248.249|1.1.1.1|1.0.0.1|2606:4700::6810:f9f9|2606:4700::6810:f8f9|2606:4700:4700::1001|2606:4700:4700::1111
cdn_wiki_text = text-lb.codfw.wikimedia.org|text-lb.eqiad.wikimedia.org|text-lb.esams.wikimedia.org|text-lb.eqsin.wikimedia.org|text-lb.ulsfo.wikimedia.org
cdn_wiki_upload = upload-lb.codfw.wikimedia.org|upload-lb.eqiad.wikimedia.org|upload-lb.esams.wikimedia.org|upload-lb.eqsin.wikimedia.org|upload-lb.ulsfo.wikimedia.org

[filter]
# 动作       | 动作名   | 代码
# 拦截       | block    |   1
# 转发／隧道 | forward  |   2
# 代理直连   | direct   |   3
# GAE 代理   | gae      |   5
# CFW 代理   | cfw      |   6
# http 链接默认动作［直连］会在无法连接时尝试活动代理
action = 3
# ssl 链接默认动作［转发／隧道］会使用网站自己的证书，不会生成额外的证书文件
sslaction = 2

[picker]
#将其它工具扫描出的 IP 放入 data 目录的 ip.txt 和 ip_ex.txt 文件，格式为每行一个完整 IP
#随机扫描，ipex.txt 会排在 ip.txt 前面
# ip_ex.txt 可以放优质 IP，数量不宜过多，2-12 小时后自动删除此文件
#扫描时使用的主机名和匹配的域名，需配对
servername = fonts.googleapis.com
comdomain = *.googleapis.com
#使用严格模式时，会重新检查已分类 IP 是否正确分类
strict = 0
#屏蔽 bad IP 的时限，单位：小时
blocktime = 0.3
#容忍 bad IP 的次数，超过暂时屏蔽，建议 3 以下
timesblock = 3
#暂时屏蔽指定次数后永久屏蔽该 IP，默认 10 次
#手动将 IP 重新加入 ip.txt 或 ip_ex.txt 后会重置状态
timesdel = 10
#是否允许删除已分类的 IP
#只是从 ip.txt 中删除，不会删除分类信息
delassoeted = 0
# IP 使用统计数据记录天数 2-7 天
statdays = 4
#是否排序统计数据文件，实在想看就打开，会慢一点点
sortstat = 0
#屏蔽列表，如：xx.xxx|xxx.xx.|xxx.xxx.xxx|xxx.xxx.x.
block = 203.208.

[picker/gae]
#当发现筛选模式当前得到的 IP 质量较好时，可关闭筛选功能固定使用这些 IP
enable = 0
#检查当前使用中的 IP 的最小间隔，单位：秒，默认 40
minrechecktime = 40
#一直保持的可用 IP 数量，5-8 就不错，建议不要超过 15
#上限为 mincnt x 1.4，达到后会移除较慢的 IP
mincnt = 5
#最大握手时间，单位：毫秒
# GAE 大于 2000 为好
maxtimeout = 3000
#最大扫描 IP 的线程数量，线程数量会自动调整，2 个线程扫 1 个 IP
#达到线程数后会限制不移除可连接 IP
#设为 0 则完全不移除，直到 IP 数到达上限
maxthreads = 1

[picker/gws]
enable = 1
#默认 30
minrechecktime = 60
mincnt = 8
# GWS 不宜超过 2000
maxtimeout = 2000
maxthreads = 3

[proxy]
#前置代理未完成
enable = 0
autodetect = 1
host = 10.64.1.63
port = 8080
username =
password =

[autorange/fast]
#自动分段下载功能，侧重速度，多用于视频，需远程服务器支持 Range
#匹配路径结尾，也就是网址第一个问号（?）或井号(#)前的部分
#建议只加入多媒体文件，其余文件用专门的多线程工具（浏览器扩展或下载软件）下载，确有需求再临时加入
endswith = videoplayback|.deploy|.mp3|.ogg|.webm|.webp|.f4v|.flv|.hlv|.m4v|.mp4|.3gp|.mov|.ts|.mkv|.rmvb
#|.7z|.zip|.rar|.cab|.iso|.xz|.txz|.lzma|.tar|.bz2|.bzip2|.tbz2|.tbz|.gz|.gzip|.lzh|.deb|.dmg|.exe
#|.jpg|.jpeg|.gif|.png
#根据 IP 质量和数量选择合适的值，够用就好，不要太大，不然容易把 IP 暂时搞死
threads = 5
#首次最大下载量，不知道用处大不，姑且弄了这么个功能
firstsize = 32768
#单个线程最大下载量，IP 带宽不大时，建议设定小些
maxsize = 262144
#剔除慢速 IP，字节/秒，尽量小，IP 质量好的可以设大点
lowspeed = 8192

[autorange/big]
#自动分段下载功能，侧重大文件，不在意速度，需远程服务器支持 Range
#根据响应内容大小判断是否启用，默认为 33554432（GAE 限制 32MB）
#主要应对 GAE，另外可对大文件适当加速，但是千万不要设置地过小
#如果对小于 32 MB 的文件启用，会放弃第一个响应结果，会浪费一定的 GAE 入口带宽（浪费小于 32MB）
onsize =
#不要求速度，只求完整下载，不建议使用过多线程，下载出错时改为单线程，即 1
threads = 2
#后续线程启动间隔时间
sleeptime = 5
#单个线程最大下载量，建议至少 4MB
maxsize = 4194304
#不建议剔除慢速 IP，使用 0 或较小的数值
lowspeed = 0

[dns]
# DNS 模块，可以用来防止 DNS 劫持/污染
# IP[:端口]
#  端口可省略，缺省端口为 53
#  用［|］分割多个服务器
#用于 remote 优先级解析其它域名，填写可靠的 DNS 服务器，注意不要与系统设置重复，默认 8.8.8.8
servers =
#用于解析直连域名，填写 ISP DNS 或国内公共 DNS 以加快解析，默认 114.114.114.114
#  ISP DNS 是宽带拨号时运营商分配的，可以在光猫、路由器或者系统网络设置中找到
#  它的速度最快，如果没啥大问题建议使用
localservers =
#是否使用 localservers 解析直连域名
#开启后，直连域名只使用 localservers 解析
localhost = 1
#配合 localservers/localhost 使用，不影响其它设置
# localwhitelist 添加使用 localservers 解析的域名
# localblacklist 排除使用 localservers 解析的域名
localwhitelist =
localblacklist =
#是否使用 DNS-over-HTTPS (JSON)
# 2019-09-24 更新：
#由于谷歌迁移服务且服务器受阻，现改为使用其它服务提供商，解析耗时有所增加
#同时因不被普遍支持，移除 overhttpsecs 设置，ipapi 设置暂时处于无用状态
overhttps = 1
# DNS-over-HTTPS API，为方便实现，只支持 application/dns-json 格式
#主机名[:端口][/路径]
#  主机名是非 IP 域名，需要自行配置［direct/forward］IP 列表
#  主机名是 IP，可能需要配置伪造 SNI 名称
#  端口可省略，缺省端口为 443
#  路径可省略，缺省路径为 /dns-query
#  用［|］分割多个服务器，随机排序、互为后备，默认 cloudflare-dns.com
#以下为已配置［direct］IP 列表的服务器 (参见自动规则配置文件)
#大部分都支持 IPv4/6 双栈，不支持 ECS，并遵守隐私保护，使用时请自行评估安全性
#对于用户来讲，遵守隐私保护的 DoH 的解析结果并不一定是最优
#  https://developers.cloudflare.com/1.1.1.1/dns-over-https/json-format/
#  https://developers.cloudflare.com/1.1.1.1/nitty-gritty-details/
#    cloudflare-dns.com
#    security.cloudflare-dns.com    安全过滤
#    family.cloudflare-dns.com      广告过滤、安全过滤
#    dns64.cloudflare-dns.com       支持 DNS64
#  https://blahdns.com/
#    doh-fi.blahdns.com         广告过滤、芬兰
#    doh-jp.blahdns.com         广告过滤、日本
#    doh-de.blahdns.com         广告过滤、德国
#  https://dns.containerpi.com/
#  上游为 1.1.1.1
#    dns.containerpi.com        支持 ECS
#  https://www.digitale-gesellschaft.ch/dns/
#    dns.digitale-gesellschaft.ch
#  dns.flatuslifir.is 没有页面
#    dns.flatuslifir.is         广告过滤
#  https://dns.sb/doh/
#    doh.dns.sb
#  https://doh.li/
#    doh.li                     伦敦、仅 IPv4、支持 ECS
#  https://dns.hostux.net/
#    dns.hostux.net             卢森堡
#    dns.hostux.net/ads         广告过滤、卢森堡
#  https://lelux.fi/resolver/
#    resolver-eu.lelux.fi       法国
#  https://dns-over-https.com/
#    dns.dns-over-https.com
#  https://pi-dns.com/
#    doh.pi-dns.com             广告过滤、安全过滤
#    doh.centraleu.pi-dns.com   广告过滤、安全过滤
#    doh.northeu.pi-dns.com     广告过滤、安全过滤
#    doh.westus.pi-dns.com      广告过滤、安全过滤
#    doh.eastus.pi-dns.com      广告过滤、安全过滤
#    doh.eastau.pi-dns.com      广告过滤、安全过滤
#    doh.eastas.pi-dns.com      广告过滤、安全过滤
#  https://snopyta.org/service/dns/
#    fi.doh.dns.snopyta.org     芬兰
#  https://blog.twnic.net.tw/2018/12/28/1803/
#  对 ECS 有回应，但好像只是配置错误，并未实际使用？
#    dns.twnic.tw
#  https://dns.seby.io/
#    doh.seby.io:8443           悉尼、仅 IPv4
#    doh-2.seby.io              悉尼、仅 IPv4
#以下为国内的服务器，支持 ECS，优点是延迟低，使用时请自行评估安全性
#原理上来讲，支持 ECS 也就能得到更优的解析结果
#  https://www.alidns.com/faqs/#dns-safe
#    dns.alidns.com/resolve
#  https://www.rubyfish.cn/dns/solutions/
#    v6.rubyfish.cn             支持 DNS64
#    dns.rubyfish.cn            据说使用了海外解析上游
#    rubyfish.cn                安全过滤
#  https://www.233py.com/s/dns
#  https://www.nextrt.com/s/dns
#  服务变动可能会比较频繁，如有需求请根据官网信息自行更新
#    i.233py.com                无固定 IP、国内
#    dns.233py.com              无固定 IP、国外
overhttpsservers =
# （未使用）IP API 网址，必须是只返回 IPv4，没有其它多余文本，可填写多个
ipapi =
# DNS 的优先级别，失败了才使用下一个，默认 overhttps|remote|system
#会以默认顺序补完没有填写的优先级设置
#同一优先级 server 的查询请求是同时发出的
#启用 localhost 时，直连域名的解析不会使用这些 DNS
# system：操作系统
# remote：即上面 server 中指定的
# overhttps：DNS-over-HTTPS API
priority = system|overhttps|remote
# https://zh.wikipedia.org/zh/域名服务器缓存污染
# https://zh.wikipedia.org/zh/防火长城
blacklist = 0.0.0.0|1.1.1.1|1.2.3.4|2.1.1.2|4.2.33.111|4.36.66.178|4.193.80.0|8.7.198.45|8.105.84.0|10.10.10.10|12.87.133.0|14.102.249.18|16.63.155.0|20.20.20.20|20.139.56.0|23.89.5.60|24.51.184.0|28.13.216.0|28.121.126.139|31.13.68.6|31.13.74.40|37.61.54.158|42.123.125.237|46.20.126.252|46.38.24.209|46.82.174.68|49.2.123.56|54.76.135.1|59.24.3.173|60.19.29.22|61.54.28.6|61.131.208.210|61.131.208.211|64.33.88.161|64.33.99.47|64.66.163.251|65.104.202.252|65.160.219.113|66.45.252.237|66.206.11.194|72.14.205.99|72.14.205.104|74.117.57.138|74.125.31.113|74.125.39.102|74.125.39.113|74.125.127.102|74.125.127.113|74.125.130.47|74.125.155.102|77.4.7.92|78.16.49.15|89.31.55.106|92.242.144.2|93.46.8.89|108.160.166.92|110.249.209.42|113.11.194.190|118.5.49.6|120.192.83.163|122.218.101.190|123.50.49.171|123.126.249.238|123.129.254.12|123.129.254.13|123.129.254.14|123.129.254.15|125.211.213.132|125.230.148.48|127.0.0.1|127.0.0.2|128.121.126.139|159.106.121.75|169.132.13.103|173.201.216.6|183.221.250.11|185.85.13.155|188.5.4.96|189.163.17.5|192.67.198.6|197.4.4.12|202.98.24.122|202.98.24.124|202.98.24.125|202.106.1.2|202.181.7.85|203.98.7.65|203.161.230.171|203.199.57.81|207.12.88.98|208.56.31.43|208.109.138.55|209.36.73.33|209.85.229.138|209.145.54.50|209.220.30.174|210.242.125.20|211.5.133.18|211.8.69.27|211.94.66.147|211.98.70.195|211.98.70.226|211.98.70.227|211.98.71.195|211.138.34.204|211.138.74.132|213.169.251.35|213.186.33.5|216.139.213.144|216.221.188.182|216.234.179.13|218.93.250.18|220.165.8.172|220.165.8.174|220.250.64.20|221.8.69.27|221.179.46.190|243.185.187.3|243.185.187.30|243.185.187.39|249.129.46.48|253.157.14.165|255.255.255.255|101::1234|10::2222|2001::212|2001:DA8:112::21AE|200:2:253d:369e::|200:2:2e52:ae44::|200:2:3b18:3ad::|200:2:4e10:310f::|200:2:5d2e:859::|200:2:807:c62d::|200:2:9f6a:794b::|200:2:cb62:741::|200:2:f3b9:bb27::|2123::3E12|21:2::2|50a7:26ed::64:ceef:0:0|::

[dns/cache]
#缓存个数，默认 1024
entries =
#过期时间，单位：秒，默认 7200
expiration =
